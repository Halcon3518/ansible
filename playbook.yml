- name: Deploy master database
  hosts: master_server
  become: yes

  tasks:

  - name: Installing database
    apt:
      name:
        - postgresql
        - postgresql-contrib
      state: latest

  - name: Installing packages
    apt:
      name:
        - python3
        - python3-pip
        - sshpass
        - git
        - python3-psycopg2
        - python3-paramiko
      state: latest

  - name: Clone Git repository
    ansible.builtin.git:
      repo: https://github.com/Halcon3518/ansible.git
      dest: /opt/ansible

  - name: Start pg service
    ansible.builtin.systemd:
      name: postgresql
      state: started
      enabled: yes

  - name: Copy postgresql.conf file
    ansible.builtin.copy:
      src: /opt/ansible/postgresql.conf
      dest: /etc/postgresql/15/main/postgresql.conf

  - name: Copy pg_hba.conf file
    ansible.builtin.copy:
      src: /opt/ansible/pg_hba.conf
      dest: /etc/postgresql/15/main/pg_hba.conf

  - name: Change postgres user password
    ansible.builtin.command: su - postgres -c "psql -c \"ALTER ROLE postgres PASSWORD 'postgres'\""

  - name: Create a new database
    ansible.builtin.command: su - postgres -c "createdb db_bot"
    ignore_errors: yes

  - name: Execute SQL script to create table phonenumbers
    ansible.builtin.postgresql_query:
      login_host: 192.168.142.133
      db: db_bot
      login_user: postgres
      query: "CREATE TABLE phonenumbers (id SERIAL PRIMARY KEY, phonenumber VARCHAR(100) NOT NULL);"
    ignore_errors: yes

  - name: Execute SQL script to create table emails
    ansible.builtin.postgresql_query:
      login_host: 192.168.142.133
      db: db_bot
      login_user: postgres
      query: "CREATE TABLE emails (id SERIAL PRIMARY KEY, email VARCHAR(100) NOT NULL);"
    ignore_errors: yes

  - name: Restart pg service
    ansible.builtin.service:
      name: postgresql
      state: restarted

- name: Deploy repl database
  hosts: repl_server
  become: yes

  tasks:

  - name: Installing database
    apt:
      name:
        - postgresql
        - postgresql-contrib
      state: latest

  - name: Installing packages
    apt:
      name:
        - python3
        - python3-pip
        - sshpass
        - git
        - python3-psycopg2
      state: latest

  - name: Clone Git repository
    ansible.builtin.git:
      repo: https://github.com/Halcon3518/ansible.git
      dest: /opt/ansible

  - name: Start pg service
    ansible.builtin.systemd:
      name: postgresql
      state: started
      enabled: yes

  - name: Copy postgresql.conf file
    ansible.builtin.copy:
      src: /opt/ansible/postgresql.conf
      dest: /etc/postgresql/15/main/postgresql.conf

  - name: Copy pg_hba.conf file
    ansible.builtin.copy:
      src: /opt/ansible/pg_hba.conf
      dest: /etc/postgresql/15/main/pg_hba.conf

  - name: Stop pg service
    ansible.builtin.systemd:
      name: postgresql
      state: stopped

  - name: Remove postgres dir
    ansible.builtin.command: su - root -c "rm -rf /var/lib/postgresql/15/main/*"

  - name: Start replication
    ansible.builtin.command: su - postgres -c "pg_basebackup -R -h 192.168.142.133 -U postgres -D /var/lib/postgresql/15/main -P"

- name: Deploy tg_bot
  hosts: master_server
  become: yes
  tasks:

    - name: Copy conf file
      ansible.builtin.copy:
        src: /opt/ansible/bot.py
        dest: /opt/play/bot.py

    - name: Copy env file
      ansible.builtin.copy:
        src: /opt/param.env
        dest: /opt/play/param.env

    - name: Move the EXTERNALLY-MANAGED file
      ansible.builtin.command: mv /usr/lib/python3.11/EXTERNALLY-MANAGED /usr/lib/python3.11/EXTERNALLY-MANAGED.old
      ignore_errors: yes

    - name: Install python-telegram-bot
      ansible.builtin.pip:
        name: python-telegram-bot==13.7

    - name: Install python-dotenv
      ansible.builtin.pip:
        name: python-dotenv

    - name: Start tg_bot
      ansible.builtin.command:
        cmd: nohup python3 /opt/play/bot.py &>/dev/null &
